@model TransportBrunaWeb.Models.TransportationLog



@{
    ViewBag.Title = "Dodaj";
}

<h2>Dodaj vožnjo</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Keson", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ContainerID", null, "Izberi keson", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContainerID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Vozilo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("VehicleID", null, "Izberi vozilo", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VehicleID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Tip tovora", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CargoID", null, "Izberi tip tovora", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CargoID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Stranka", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CustomerID", null, "Izberi stranko", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
        </div>
    </div>
    <!--
    <script type="text/javascript">
        function ShowHideDiv(Costs) {
            var dvCosts = document.getElementById("dvCosts");
            dvCosts.style.display = Costs.checked ? "block" : "none";
        }
    </script>
    <div class="form-group">
        Html.Label("Cost", htmlAttributes: new { class = "control-label col-md-2" })
        <div class="col-md-10">
            <label for="Costs">
                <input type="checkbox" id="costs" name="checkCosts" value="true" onclick="ShowHideDiv(this)" />
                Dodaj strošek
            </label>
            <div id="dvCosts" style="display: none">
                Html.DropDownList("CustomerID", null, "Select Customer", htmlAttributes: new { class = "form-control" })
                <input type="number" step="any" id="amount" name="amount" class="form-control" />
                <input type="date" id="date" name="date" class="form-control" />
                <input type="text" id="note" name="note" class="form-control" />

            </div>
        </div>
    </div>
    <!--
    <div class="form-group">
        Html.LabelFor(model => model.CostID, "CostID", htmlAttributes: new { class = "control-label col-md-2" })
        <div class="col-md-10">
            Html.DropDownList("CostID", null, htmlAttributes: new { class = "form-control" })
            Html.ValidationMessageFor(model => model.CostID, "", new { class = "text-danger" })
        </div>
    </div>
    -->
    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Context.User.Identity.IsAuthenticated && User.IsInRole("Superadmin"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
    }
        <div class="form-group">
            <input type="checkbox" id="household" name="checkHousehold" value="true">
            <label class="myCheckbox" for="householdCheckbox">Dodaj gospodinjstvo?</label>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Nazaj na seznam", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
}
